/* ==========================================================================
		MIXINS
	 ========================================================================== */

// breakpoint mixins
@mixin border-radius-fix($w) {
	 @include border-top-left-radius($w);
	@include border-top-right-radius($w);
	@include border-bottom-left-radius($w);
	@include border-bottom-right-radius($w);
}
@mixin desktop {
	 @media (min-width: $desktop){
		@content;
	}
}
@mixin laptop {
	 @media (max-width: $desktop){
		@content;
	}
}
@mixin tablet {
	 @media (max-width: $tablet){
		@content;
	}
}
@mixin tablet-portrait {
	 @media (max-width: $tabletPortrait){
		@content;
	}
}
@mixin phone {
	 @media (max-width: $phone){
		@content;
	}
}
@mixin phone-portrait {
	 @media (max-width: $phonePortrait){
		@content;
	}
}
@mixin wrapper {
	 @media (max-width: $wrapper){
		@content;
	}
}
@mixin respond-to($width) {
	 @media only screen and (max-width: $width){
		@content;
	}
}
@mixin respond-from($width) {
	 @media only screen and (min-width: $width){
		@content;
	}
}
@mixin respond-to-height($height) {
	 @media only screen and (max-height: $height){
		@content;
	}
}
@mixin above-phone-portrait {
	 @media (min-width: $phonePortrait + 1){
		@content;
	}
}
@mixin above-phone {
	 @media (min-width: $phone + 1){
		@content;
	}
}
@mixin above-tablet-portrait {
	 @media (min-width: $tabletPortrait + 1){
		@content;
	}
}
@mixin above-laptop {
	 @media (min-width: $laptop){
		@content;
	}
}
@mixin above-tablet {
	 @media (min-width: $tablet + 1){
		@content;
	}
}
@mixin above-wrapper {
	 @media (min-width: $wrapper){
		@content;
	}
}

// aspect ratio
// rewritten, simplified
@mixin aspect-ratio($w, $h) {
	$slope: $h / $w;
	$height: $h - $w * $slope;
	padding-top: $slope * 100%;
	height: $height;
}

// keyframes mixin
@mixin keyframes($name) {
	 @-webkit-keyframes #{$name}{
		@content;
	}
	@-moz-keyframes #{$name} {
		 @content;
	}
	@-ms-keyframes #{$name} {
		 @content;
	}
	@keyframes #{$name} {
		 @content;
	}
}
@mixin animation($def) {
	-webkit-animation: $def;
	/* Safari 4+ */
	-moz-animation: $def;
	/* Fx 5+ */
	-o-animation: $def;
	/* Opera 12+ */
	animation: $def;
	/* IE 10+ */
}

// add a slash before your item
@mixin slash($_height: 10px, $_margin: 5px, $_width: 4px, $_skew: -20deg) {
	&:before {
		content: " ";
		width: $_width;
		height: $_height;
		background-color: $color_slash;
		display: inline-block;
		margin-right: $_margin;
		@include transform(skewX($_skew));

		.rtl & {
			margin-left: $_margin;
			margin-right: 0;
		}
	}
}

// add an arrow after your item
@mixin arrow($position: 'down', $_height: 6px, $_width: 8px, $_color: black) {
	&:after {
		content: " ";
		display: inline-block;
		width: 0;
		height: 0;
		border-style: solid;
		margin-bottom: $_height / 2;

		@if $position == 'down' {
			border-width: $_height $_width / 2 0 $_width / 2;
			border-color: $_color transparent transparent transparent;
		}

		@else if $position == 'up' {
			border-width: 0 $_width / 2 $_height $_width / 2;
			border-color: transparent transparent $_color transparent;
		}

		@else if $position == 'left' {
			border-width: $_height / 2 $_width $_height / 2 0;
			border-color: transparent $_color transparent transparent;
		}

		@else if $position == 'right' {
			border-width: $_height / 2 0 $_height / 2 $_width;
			border-color: transparent transparent transparent $_color;
		}
	}
}

// vertical alignment
@mixin vertical-align {
	top: 50%;
	@include transform(translateY(-50%));
}
@mixin vertical-align-bottom {
	top: 100%;
	@include transform(translateY(-100%));
}
@mixin vertical-horizontal-align {
	left: 50%;
	top: 50%;
	@include transform(translate(-50%,-50%));
}
@mixin horizontal-align {
	left: 50%;
	@include transform(translateX(-50%));
}

// background gradients that work in IE
@mixin background-image-with-ms($image) {
	 @include background-image($image); // Compass default version, for everything but IE 10.
	background-image: -ms-#{$image}; // Vendor prefixes for IE 10.
}
@mixin clearfix {
	zoom: 1;

	&:after,
	&:before {
		content: "\0020";
		display: block;
		height: 0;
		overflow: hidden;
	}

	&:after {
		clear: both;
	}
}

// util classes
.clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}
@mixin aspect-ratio($w, $h) {
	//position: relative;
	$slope: $h / $w;
	$height: $h - $w * $slope;
	padding-top: $slope * 100%;
	height: $height;

	> .img-content {
		&:before {
			display: block;
			content: "";
			width: 100%;
			// @include calc(margin-top, "#{$height} * -1.333333%");
			margin-top: -9.4%;
		}
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}
